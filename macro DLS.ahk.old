
#NoEnv  ; Evitar problemas de compatibilidad
SendMode Input  ; Configurar el modo de entrada más rápido
SetWorkingDir %A_ScriptDir%  ; Configurar el directorio de trabajo actual
#IfWinActive ahk_exe Doomsday.exe

; Archivo para guardar las coordenadas
configFile := A_ScriptDir "\config.ini"
global pararConsumir := false  ; Variable global para detener el loop

; Si el archivo no existe, lo crea con valores predeterminados
if !FileExist(configFile)
    {
        IniWrite, 100, %configFile%, Window, X  ; Valor predeterminado de X
        IniWrite, 100, %configFile%, Window, Y  ; Valor predeterminado de Y
    }
    
    ; Leer las coordenadas desde el archivo de configuración
    IniRead, posX, %configFile%, Window, X, 100
    IniRead, posY, %configFile%, Window, Y, 100

Gui, +AlwaysOnTop +ToolWindow +Border
Gui, Font, s11, Arial  ; Fuente clara y legible

Gui, Add, Text, Center, [Asignación de Teclas]
Gui, Add, Text, Center, 
Gui, Add, Text, Center, F1 → Matar Zombies
Gui, Add, Text, Center, F2 → Obtener Posición del Puntero
Gui, Add, Text, Center, F3 → Consumir Stamina
Gui, Add, Text, Center, R  → Recargar Script
Gui, Add, Text, Center, E  → Salir del Script
Gui, Add, Text, Center,
Gui, Add, Text, Center w300 vEstado, Esperando comando...
Gui, Add, Text, Center,

; Mostrar la ventana en la última posición guardada
Gui, Show, AutoSize, Controles del Script

; Mover la ventana a la posición guardada
WinMove, Controles del Script,, %posX%, %posY%

return

ActualizarEstado(msg) {
    GuiControl,, Estado, %msg%
}

loopNiveles(ciclos)
{
    static popUp := 400
    static noPopUp := 120
    static stdSped := 90
    static clickSpd := 80
    Loop, %ciclos%
    {
        ; Paso 1: Clic en Lupa
        MouseMove, 41, 644, 0
        Sleep, stdSped
        Click Down
        Sleep, clickSpd
        Click Up
        Sleep, popUp

        ; Paso 2: Clic en +
        MouseMove, 329, 593, 0
        Sleep, stdSped
        Click Down
        Sleep, clickSpd
        Click Up
        Sleep, noPopUp

        ; Paso 3: Clic en Search
        MouseMove, 194, 661, 0
        Sleep, stdSped
        Click Down
        Sleep, clickSpd
        Click Up
        Sleep, popUp*2

        ; Paso 4: Clic en Zombie
        MouseMove, 570, 452, 0
        Sleep, stdSped
        Click Down
        Sleep, clickSpd
        Click Up
        Sleep, popUp

        ; Paso 5: Clic en Attack
        MouseMove, 869, 624, 0
        Sleep, stdSped
        Click Down
        Sleep, clickSpd
        Click Up
        Sleep, popUp

        ; Paso 6: Clic en Create Squad
        MouseMove, 880, 320, 0
        Sleep, stdSped
        Click Down
        Sleep, clickSpd
        Click Up
        Sleep, popUp

        ; Paso 7: Clic en March
        MouseMove, 860, 712, 0
        Sleep, stdSped
        Click Down
        Sleep, clickSpd
        Click Up
        Sleep, popUp
    }
    Loop, %ciclos%
    {   
        ; Paso 8: Clic en Lupa
        MouseMove, 41, 644, 0
        Sleep, stdSped
        Click Down
        Sleep, clickSpd
        Click Up
        Sleep, popUp

        ; Paso 9: Clic en [-]
        MouseMove, 68, 593, 0
        Sleep, stdSped
        Click Down
        Sleep, clickSpd
        Click Up
        Sleep, noPopUp

        ; Paso 10: Clic en Search
        MouseMove, 194, 661, 0
        Sleep, stdSped
        Click Down
        Sleep, clickSpd
        Click Up
        Sleep, popUp*2

        ; Paso 11: Clic en Zombie
        MouseMove, 570, 452, 0
        Sleep, stdSped
        Click Down
        Sleep, clickSpd
        Click Up
        Sleep, popUp

        ; Paso 12: Clic en Attack
        MouseMove, 869, 624, 0
        Sleep, stdSped
        Click Down
        Sleep, clickSpd
        Click Up
        Sleep, popUp

        ; Paso 13: Clic en [Create Squad]
        MouseMove, 880, 320, 0
        Sleep, stdSped
        Click Down
        Sleep, clickSpd
        Click Up
        Sleep, popUp

        ; Paso 14: Clic en [March]
        MouseMove, 860, 712, 0
        Sleep, stdSped
        Click Down
        Sleep, clickSpd
        Click Up
        Sleep, popUp
    }
}

consumeStamina()
{
    static espera := 300
    pararConsumir := false  ; Asegurar que el loop empieza activo
    Loop  ; Loop infinito
    {
        if (pararConsumir)  ; Verificar si se ha presionado 'S'
            break  ; Salir del loop
        MouseMove, 657, 456, 0
        Sleep, 50
        Click Down
        Sleep, 50
        Click Up
        Sleep, espera
        if (pararConsumir)
            break
        MouseMove, 580, 695, 0
        Sleep, 50
        Click Down
        Sleep, 50
        Click Up
        Sleep, espera
        if (pararConsumir)
            break
        MouseMove, 864, 713, 0
        Sleep, 50
        Click Down
        Sleep, 50
        Click Up
        Sleep, espera
        if (pararConsumir)
            break
        MouseMove, 600, 701, 0
        Sleep, 50
        Click Down
        Sleep, 50
        Click Up
        Sleep, espera
        if (pararConsumir)
            break
        MouseMove, 657, 515, 0
        Sleep, 50
        Click Down
        Sleep, 50
        Click Up
        Sleep, espera
        if (pararConsumir)
            break
        MouseMove, 736, 603, 0
        Sleep, 50
        Click Down
        Sleep, 50
        Click Up
        Sleep, espera
        if (pararConsumir)
            break
        MouseMove, 588, 707, 0
        Sleep, 50
        Click Down
        Sleep, 50
        Click Up
        Sleep, espera
    }
    MsgBox, 0, Cancelado, Se detuvo el consumo de stamina.
}

mataZombies()
{
    static staminaZombie := 77
    InputBox, stamina, Stamina Disponible, Ingresa cuanta stamina tienes actualmente:, , 300, 150
    if (ErrorLevel)
    {
        MsgBox, 0, Cancelado, Cancelaste la operación.
        return
    }

    totalNiveles := Floor(stamina / (2 * staminaZombie))    ; Calcular la cantidad total de niveles posibles
    ciclosCompletos := Floor(totalNiveles / 5)              ; Cantidad de ciclos completos con 5 niveles
    nivelesRestantes := Mod(totalNiveles, 5)                ; Niveles que quedan después de los ciclos completos

    ; Si no hay niveles posibles
    if (totalNiveles < 1) {
        MsgBox, 0, Insuficiente Stamina, No tienes suficiente stamina para zombiar.
        return
    }

    ; Confirmación con el usuario
    MsgBox, 0, Confirmación, Se ejecutarán %ciclosCompletos% ciclos con 5 niveles y 1 ciclo con %nivelesRestantes% niveles.`nEn caso de cualquier problema, presiona R para parar el script y recargarlo.

    ; Ejecución del script
    Sleep, 500  ; Pausa inicial, se puede eliminar si se desea
    Loop, %ciclosCompletos%  ; Repetir según los ciclos calculados
    {
        loopNiveles(5)
    }
    if (nivelesRestantes > 0) {
        loopNiveles(nivelesRestantes)
    }

    MsgBox, 0, Finalizado, El matazombies ha finalizado. ¡Buen trabajo!
    return
}

posicionPuntero()
{
    MouseGetPos, posX, posY  ; Obtiene las coordenadas X e Y del puntero
    Clipboard := posX ", " posY ; Copia las coordenadas al portapapeles
    coordenadasFile := A_ScriptDir . "\coordenadas.txt"

    ; Pedir un título al usuario
    InputBox, titulo, Guardar coordenadas, Ingresa un título o descripción:, , 300, 150
    if (ErrorLevel) {  ; Si el usuario cancela la entrada
        MsgBox, 0, Cancelado, Operación cancelada.
        return
    }

    ; Validar que haya ingresado algo
    if (titulo = "") {
        MsgBox, 0, Sin titulo, No ingresaste un título. Las coordenadas no se guardarán.
        return
    }

    ; Abrir el archivo en modo escritura (agregar sin sobrescribir)
    file := FileOpen(coordenadasFile, "a")
    if (!file) {
        MsgBox, 0, Error,Error al abrir o crear el archivo: %coordenadasFile%
        return
    }

    ; Escribir el título y las coordenadas en el archivo
    file.WriteLine("[" . titulo . "]")  ; Agrega el título entre corchetes
    file.WriteLine(posX . ", " . posY)  ; Guarda las coordenadas
    file.WriteLine("")  ; Línea en blanco para separar entradas
    file.Close()
}

;Asignación de teclas con confirmacion visual (estado)
F1::
    ActualizarEstado("Ejecutando: Matar Zombies...")
    mataZombies()
    ActualizarEstado("Esperando comando...")
return

F2::
    ActualizarEstado("Ejecutando: Obtener Posición...")
    posicionPuntero()
    ActualizarEstado("Esperando comando...")
return

F3::
    ActualizarEstado("Ejecutando: Consumir Stamina...")
    consumeStamina()
    ActualizarEstado("Esperando comando...")
return

R::
    ActualizarEstado("Recargando script...")
    Sleep, 500
    Reload
return

S::pararConsumir := true

E::
    WinGetPos, posX, posY,,, Controles del Script
    IniWrite, %posX%, %configFile%, Window, X  ; Guardar X
    IniWrite, %posY%, %configFile%, Window, Y  ; Guardar Y
    ExitApp

; Al cerrar la ventana, guarda la posición
GuiClose:
    WinGetPos, posX, posY,,, Controles del Script
    IniWrite, %posX%, %configFile%, Window, X  ; Guardar X
    IniWrite, %posY%, %configFile%, Window, Y  ; Guardar Y
    ExitApp